const axios = require('axios');
const fs = require('fs-extra');

module.exports.config = {
  name: "hd",
  version: "2.5",
  hasPermssion: 0,
  credits: "Hridoy Hossen",
  description: "Enhance any image to HD quality",
  commandCategory: "No Prefix",
  usages: "Reply to an image with: hd",
  cooldowns: 3,
};

module.exports.handleEvent = async function ({ api, event }) {
  const { threadID, messageID, messageReply, body } = event;
  if (!body || !body.toLowerCase().startsWith("hd")) return;

  const imageUrl = messageReply?.attachments?.[0]?.url;
  const cachePath = __dirname + "/cache/hd_result.jpg";

  if (!imageUrl) {
    return api.sendMessage(
      "ЁЯМ║ **HD ржХрж░рждрзЗ рж╣рж▓рзЗ ржЫржмрж┐ржЯрж┐рждрзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрж┐ржи**\n\nЁЯУ╕ ржЙржжрж╛рж╣рж░ржг:\nЁЯСЙ ржЫржмрж┐рждрзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржХрж░рзЗ рж▓рж┐ржЦрзБржи: hd",
      threadID,
      messageID
    );
  }

  api.sendMessage("ЁЯХР ржЖржкржирж╛рж░ ржЫржмрж┐ HD ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ, ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи...", threadID, async () => {
    try {
      const apiURL = `https://code-merge-api-hazeyy01.replit.app/api/try/remini?url=${encodeURIComponent(imageUrl)}`;
      const response = await axios.get(apiURL);

      if (!response.data?.image_data)
        return api.sendMessage("тЪая╕П HD conversion ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ! ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржкрж░рзЗ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред", threadID, messageID);

      const imageBuffer = (await axios.get(response.data.image_data, { responseType: "arraybuffer" })).data;
      fs.writeFileSync(cachePath, Buffer.from(imageBuffer, 'binary'));

      api.sendMessage({
        body: "тЬЕ ржЖржкржирж╛рж░ ржЫржмрж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ HD рждрзЗ рж░рзВржкрж╛ржирзНрждрж░рж┐ржд рж╣ржпрж╝рзЗржЫрзЗ!",
        attachment: fs.createReadStream(cachePath)
      }, threadID, () => fs.unlinkSync(cachePath), messageID);

    } catch (error) {
      console.error(error);
      api.sendMessage("тЭМ Error: ржЫржмрж┐ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред", threadID, messageID);
    }
  });
};

module.exports.run = async function () { };